.payment-method.payment-method-edit
  %ul.nav.nav-tabs{:role => "tablist"}
    - if params[:payment_tab] == "credit"
      %li{:role => "presentation", class: "active"}
        %a.avenir-regular{"aria-controls" => "home", "data-toggle" => "tab", :href => "#creadit-card", :role => "tab"} CREDIT CARD
    - if params[:payment_tab] == "paypal"
      %li{:role => "presentation", class: "active"}
        %a.avenir-regular{"aria-controls" => "profile", "data-toggle" => "tab", :href => "#paypal", :role => "tab"} PAYPAL
  / Tab panes
  .tab-content
    - if params[:payment_tab] == "credit"
      #creadit-card.tab-pane{:role => "tabpanel", class: "#{(params[:payment_tab] || 'credit') == 'credit' ? 'active' : ''}"}
        .container
          .row
            = simple_form_for(@cc_payment, url: patients_payment_path(@cc_payment), html: { method: :put, class: "form-horizontal", id: "cc-form" }) do |form|
              = form.error_notification
              = form.input :patient_id, as: :hidden, input_html: {value: current_patient.try(:id)}
              = form.input :cc_type, as: :hidden, input_html: {value: ""}
              = hidden_field_tag :payment_tab, "credit"

              .form-group
                = form.label :cc_num, "Card Number", class: "control-label avenir-regular col-md-3 col-md-offset-1 text-left"
                .col-md-4
                  = form.input :cc_num, required: true, autofocus: true, label: false, :placeholder => "---- ---- ---- ----", as: :tel, input_html: {class: "col-md-4 form-control avenir-regular"}
                .col-md-3
                  %small.avenir-regular
                    Type:
                    %strong#ccnum-type invalid

              .form-group
                = form.label :expiry, "Expiration", class: "control-label avenir-regular col-md-3 col-md-offset-1 text-left"
                .col-md-4
                  = form.input :expiry, required: true, autofocus: true, label: false, :placeholder => "-- / --", as: :tel, input_html: {class: "col-md-4 form-control avenir-regular"}
                .cvc.col-md-4
                  .row
                    = form.label :cvc, "CVC", class: "control-label avenir-regular col-md-3 text-left"
                    .col-md-4
                      = form.input :cvc, required: true, autofocus: true, label: false, :placeholder => "---", as: :password, input_html: {class: "col-md-4 form-control avenir-regular"}

              .form-group
                .col-md-4.col-md-offset-4
                  .billing-select
                    %span
                      = image_tag asset_url("address_marker.png"), class: "market-icon"
                    %span#show-address-unlogged.avenir-regular
                      / = session[:not_logged_address]
                      - if @current_billing.nil?
                        Select a billing address
                      - else
                        = @current_billing.try(:address)
                    %span
                      = link_to '#', class: "select-billing" do
                        = image_tag asset_url("search-icon.png"), width: "20", height: "20", class: "search-icon"

              .text-center{style: "margin-top: 20px"}
                = link_to "Save", "#", class: "btn btn-red", id: "submit"
                / %button#submit.btn.btn-red Confirm
                #result.emoji

    - if params[:payment_tab] == "paypal"
      #paypal.tab-pane{:role => "tabpanel", class: "#{params[:payment_tab] == 'paypal' ? 'active' : ''}"}
        .container
          %center
            = image_tag asset_url('paypal-logo.png')
          .row
            = simple_form_for @payment, url: patients_payment_path(@payment), html: { method: :put, class: "form-horizontal" } do |f|
              = f.error_notification
              = f.input :patient_id, as: :hidden, input_html: {value: current_patient.try(:id)}
              = hidden_field_tag :payment_tab, "paypal"

              .form-group
                = f.label :paypal_email, "Paypal Email", class: "control-label avenir-regular col-md-3 col-md-offset-1 text-left"
                .col-md-6
                  = f.input :paypal_email, required: true, autofocus: true, label: false, :placeholder => "Email", input_html: {class: "form-control avenir-regular"}

              .form-group
                = f.label :password, "Paypal Password", class: "control-label avenir-regular col-md-3 col-md-offset-1 text-left"
                .col-md-6
                  = f.input :password, required: true, autofocus: true, label: false, :placeholder => "Paypal password", input_html: {class: "form-control avenir-regular"}

              .form-group
                .col-md-4.col-md-offset-4
                  .billing-select
                    %span
                      = image_tag asset_url("address_marker.png"), class: "market-icon"
                    %span#show-address-unlogged.avenir-regular
                      / = session[:not_logged_address]
                      - if @current_billing.nil?
                        Select a billing address
                      - else
                        = @current_billing.try(:address)
                    %span
                      = link_to '#', class: "select-billing" do
                        = image_tag asset_url("search-icon.png"), width: "20", height: "20", class: "search-icon"

              .text-center{style: "margin-top: 20px"}
                = f.submit 'Save', class: "btn btn-red"

:javascript

  var ready;
  ready = function() {
    if($(".payment-method-edit").length > 0) {
      var payment_id;
      $(".tab-pane.active a.select-billing").click(function() {
        if ($('#creadit-card').hasClass("active")) {
          var ccNum = $("#patient_credit_payment_cc_num").val();
          var exp = $("#patient_credit_payment_expiry").val();
          var dataToStore = JSON.stringify({ccNum: ccNum, exp: exp});
          localStorage.setItem("paramsCcStoreEdit", dataToStore);
          payment_id = '#{@cc_payment.try(:id)}';
          window.location.href = "/patients/locations?from_edit_profile=true&payment=" + payment_id + "&select_billing=true&tab=credit"

        }else {
          var email = $("#patient_paypal_payment_paypal_email").val();
          var dataToStore = JSON.stringify({paypal_email: email});
          localStorage.setItem("paramsPaypalStoreEdit", dataToStore);
          payment_id = '#{@payment.try(:id)}';
          window.location.href = "/patients/locations?from_edit_profile=true&payment=" + payment_id + "&select_billing=true&tab=paypal"
        }
      });

      var ccnum  = document.getElementById('patient_credit_payment_cc_num'),
        type   = document.getElementById('ccnum-type')
        expiry = document.getElementById('patient_credit_payment_expiry'),
        cvc    = document.getElementById('patient_credit_payment_cvc'),
        form   = document.getElementById('cc-form'),
        submit = document.getElementById('submit');
      autoRefill();
      if (ccnum != null) {
        updateTypeCard(ccnum.value);
        payform.cardNumberInput(ccnum);
        payform.expiryInput(expiry);
        payform.cvcInput(cvc);
        $('#patient_credit_payment_cc_num').payform('formatCardNumber');
        $('#patient_credit_payment_expiry').payform('formatCardExpiry');
        $('#patient_credit_payment_cvc').payform('formatCardCVC');
        ccnum.addEventListener('input',   updateType);
        submit.addEventListener('click', function() {
          var valid     = [],
              expiryObj = payform.parseCardExpiry(expiry.value);

          valid.push(fieldStatus(ccnum,  payform.validateCardNumber(ccnum.value)));
          valid.push(fieldStatus(expiry, payform.validateCardExpiry(expiryObj)));
          valid.push(fieldStatus(cvc,    payform.validateCardCVC(cvc.value, type.innerHTML)));
          if (payform.validateCardNumber(ccnum.value) && payform.validateCardExpiry(expiryObj) && payform.validateCardCVC(cvc.value, type.innerHTML)) {
            $("#patient_credit_payment_cc_type").val($("#ccnum-type")[0].innerHTML.toLowerCase());
            form.submit();
          }
        });
      }
      function fieldStatus(input, valid) {
        if (valid) {
          removeClass(input.parentNode, 'error');
        } else {
          addClass(input.parentNode.parentNode.parentNode, 'error');
        }
        return valid;
      }
      function addClass(ele, _class) {
        if (ele.className.indexOf(_class) === -1) {
          ele.className += ' ' + _class;
        }
      }

      function removeClass(ele, _class) {
        if (ele.className.indexOf(_class) !== -1) {
          ele.className = ele.className.replace(_class, '');
        }
      }

      function updateType(e) {
        var cardType = payform.parseCardType(e.target.value);
        type.innerHTML = cardType || 'invalid';
      }

      function updateTypeCard(card) {
        var cardType = payform.parseCardType(card);
        type.innerHTML = cardType || 'invalid';
      }

      function autoRefill() {
        if ('#{params[:back]}' == 'true') {
          console.log("from back");
          if('#{params[:payment_tab]}' == 'credit') {
            var hash = {};
            hash = JSON.parse(localStorage.getItem("paramsCcStoreEdit"));
            $("#patient_credit_payment_cc_num").val(hash.ccNum);
            $("#patient_credit_payment_expiry").val(hash.exp);
            updateTypeCard(ccnum.value);
          }else {
            var hash = JSON.parse(localStorage.getItem("paramsPaypalStoreEdit"));
            $("#patient_paypal_payment_paypal_email").val(hash.paypal_email);
          }
        }
      }
    }
  };
  $(document).ready(ready);